{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA,IAAII,UAAJ;;AAEA,SAASC,YAAT,GAAwB;EACtBD,UAAU,GAAG,IAAIH,mDAAJ,CAAkB;IAC7BK,KAAK,EAAE,GADsB;IAE7BC,MAAM,EAAE,GAFqB;IAG7BC,cAAc,EAAE;MACdC,eAAe,EAAE;IADH;EAHa,CAAlB,CAAb;;EAQA,IAAIC,IAAJ,EAA4C;IAC1CN,UAAU,CAACS,OAAX;EACD,CAFD,MAEO,EAQN;;EAEDT,UAAU,CAACgB,EAAX,CAAc,QAAd,EAAwB,YAAM;IAC5BhB,UAAU,GAAG,IAAb;EACD,CAFD;AAGD;;AAEDJ,4CAAA,CAAO,OAAP,EAAgBK,YAAhB;AACAL,mEAAA,GAAgC,IAAhC,C","sources":["webpack://electron-react-ts/external node-commonjs \"electron\"","webpack://electron-react-ts/external node-commonjs \"path\"","webpack://electron-react-ts/external node-commonjs \"url\"","webpack://electron-react-ts/webpack/bootstrap","webpack://electron-react-ts/webpack/runtime/compat get default export","webpack://electron-react-ts/webpack/runtime/define property getters","webpack://electron-react-ts/webpack/runtime/hasOwnProperty shorthand","webpack://electron-react-ts/webpack/runtime/make namespace object","webpack://electron-react-ts/./electron/main.ts"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { app, BrowserWindow } from \"electron\"\nimport * as path from \"path\"\nimport * as url from \"url\"\n\nlet mainWindow: Electron.BrowserWindow | null;\n\nfunction createWindow() {\n  mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      nodeIntegration: true,\n    },\n  });\n\n  if (process.env.NODE_ENV === \"development\") {\n    mainWindow.loadURL(`http://localhost:4000`);\n  } else {\n    mainWindow.loadURL(\n      url.format({\n        pathname: path.join(__dirname, \"../index.html\"),\n        protocol: \"file:\",\n        slashes: true,\n      })\n    );\n  }\n\n  mainWindow.on(\"closed\", () => {\n    mainWindow = null;\n  });\n}\n\napp.on(\"ready\", createWindow);\napp.allowRendererProcessReuse = true;\n"],"names":["app","BrowserWindow","path","url","mainWindow","createWindow","width","height","webPreferences","nodeIntegration","process","env","NODE_ENV","loadURL","format","pathname","join","__dirname","protocol","slashes","on","allowRendererProcessReuse"],"sourceRoot":""}